<?php

namespace WebtownPhp\BannerBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * BannerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BannerRepository extends EntityRepository
{
    /**
     * @param string $placeName
     *
     * @return array
     */
    public function getBannersForPlace($placeName)
    {
        /**
         * @todo test with multiple queries intead of "OR"
         */
        $query = $this->_em->createQuery(
            'SELECT b
            FROM WebtownPhpBannerBundle:Banner b
            WHERE b.isActive = 1
            AND b.place = :place
            AND b.maxDisplayCount > b.displayCount
            AND (b.startAt IS NULL OR b.startAt <= :ts)
            AND (b.endAt IS NULL OR b.endAt > :ts)'
        )
            ->setParameter('place', $placeName)
            ->setParameter('ts', new \DateTime());
        return $query->getResult();
    }

    /**
     * @param string $placeName
     *
     * @return int
     */
    public function getPrioritySumForPlace($placeName)
    {
        /**
         * @todo test with multiple queries intead of "OR"
         */
        $query = $this->_em->createQuery(
            'SELECT SUM(b.priority) as s
            FROM WebtownPhpBannerBundle:Banner b
            WHERE b.isActive = 1
            AND b.maxDisplayCount > b.displayCount
            AND (b.startAt IS NULL OR b.startAt <= :ts)
            AND (b.endAt IS NULL OR b.endAt > :ts)'
        )
            ->setParameter('place', $placeName)
            ->setParameter('ts', new \DateTime());

        return $query->getSingleScalarResult();
    }

    /**
     * @param string $placeName
     *
     * @return int
     */
    public function getBannerCountForPlace($placeName)
    {
        $query = $this->_em->createQuery(
            'SELECT COUNT(b.id) as c
            FROM WebtownPhpBannerBundle:Banner b WHERE b.place = :place');
        $query->setParameters(['place' => $placeName]);

        return $query->getSingleScalarResult();
    }

    /**
     * Increase display counter for banner
     *
     * @param Banner $banner
     */
    public function incrementDisplayCountForBanner(Banner $banner)
    {
        $this->_em->createQuery(
            'UPDATE WebtownPhpBannerBundle:Banner b
            SET b.displayCount = b.displayCount+1
            WHERE b.id = :id')
            ->setParameter('id', $banner->getId())
            ->execute();
    }

    /**
     * Increase click counter for banner
     *
     * @param Banner $banner
     */
    public function incrementClickCountForBanner(Banner $banner)
    {
        $this->_em->createQuery(
            'UPDATE WebtownPhpBannerBundle:Banner b
            WHERE b.id = :id
            SET b.clickCount = b.clickCount+1')
            ->setParameter('id', $banner->getId())
            ->execute();
    }
}
